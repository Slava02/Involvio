// Code generated by go-swagger; DO NOT EDIT.

package entity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// User user
//
// swagger:model User
type User struct {

	// auth date
	// Example: 11.01.2002 12:00
	// Format: date-time
	AuthDate strfmt.DateTime `json:"auth_date,omitempty"`

	// first name
	// Example: ivan
	FirstName string `json:"first_name,omitempty"`

	// last name
	// Example: pupkin
	LastName string `json:"last_name,omitempty"`

	// photo url
	// Example: http://my_photo
	PhotoURL string `json:"photo_url,omitempty"`

	// user id
	// Example: 1234
	UserID int64 `json:"user_id,omitempty"`

	// username
	// Example: ivan_pupk123
	Username string `json:"username,omitempty"`
}

// Validate validates this user
func (m *User) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAuthDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *User) validateAuthDate(formats strfmt.Registry) error {
	if swag.IsZero(m.AuthDate) { // not required
		return nil
	}

	if err := validate.FormatOf("auth_date", "body", "date-time", m.AuthDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this user based on context it is used
func (m *User) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *User) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *User) UnmarshalBinary(b []byte) error {
	var res User
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
