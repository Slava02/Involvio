openapi: 3.0.0
info:
  description: Endpoints for pet-project involvio
  version: 1.0.0-oas3
  title: Involvio
tags:
  - name: spaces
  - name: events
  - name: user
paths:
  /spaces:
    post:
      tags:
        - spaces
      summary: create a space
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createSpacesRequest'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createSpacesResponse'
    get:
      tags:
        - spaces
      summary: get list of availible spaces
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listSpacesResponse'
  /spaces/{spaceId}:
    get:
      tags:
        - spaces
      summary: space info
      parameters:
        - name: spaceId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/spaceInfoResponse'
  /spaces/{spaceId}/join:
    post:
      tags:
        - spaces
      summary: join space
      parameters:
        - name: spaceId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/joinSpacesRequest'
        required: true
      responses:
        '200':
          description: successful operation
  /events:
    post:
      tags:
        - events
      summary: Create event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEventRequest'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createEventResponse'
  /events/{eventId}:
    get:
      tags:
        - events
      summary: event info
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eventInfoResponse'
  /events/{eventId}/join:
    post:
      tags:
        - events
      summary: 'join event '
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/joinEventRequest'
        required: true
      responses:
        '200':
          description: successful operation

  /user:
    post:
      tags:
        - user
      summary: 'create user'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '200':
          description: successful operation

  /user/{userId}:
    get:
      tags:
        - user
      summary: show profile
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userInfoResponse'
    delete:
      tags:
        - user
      summary: delete user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
    patch:
      tags:
        - user
      summary: fill the blank (or edit) Info about youself and your interests
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fillBlankRequest'
      responses:
        '200':
          description: successful operation

  /user/{usersId}/promote:
    post:
      tags:
        - user
      summary: make admin
      parameters:
        - name: usersId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/actionWithUserRequest'
      responses:
        '200':
          description: successful operation

  /user/{usersId}/reduce:
    post:
      tags:
        - user
      summary: cut priveleges (creator only)
      parameters:
        - name: usersId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/actionWithUserRequest'
      responses:
        '200':
          description: successful operation

components:
  schemas:
    createSpacesRequest:
      type: object
      properties:
        admin_id:
          type: integer
          example: 1234
        tags:
          $ref: '#/components/schemas/spaceTags'
    createSpacesResponse:
      type: object
      properties:
        space_id:
          type: integer
          example: 1234
    listSpacesResponse:
      type: object
      properties:
        spaces:
          type: array
          items:
            $ref: '#/components/schemas/space'
    spaceInfoResponse:
      type: object
      properties:
        space:
          $ref: '#/components/schemas/space'
    joinSpacesRequest:
      $ref: '#/components/schemas/user'
    createEventRequest:
      type: object
      properties:
        user_id:
          type: integer
          example: 1234
        space_id:
          type: integer
          example: 1234
        event:
          $ref: '#/components/schemas/event'
    createEventResponse:
      type: object
      properties:
        event_id:
          type: integer
          example: 1234
    joinEventRequest:
      type: object
      properties:
        user_id:
          type: integer
          example: 1234
    eventInfoResponse:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/event'
        users:
          type: array
          items:
            $ref: '#/components/schemas/user'
    userInfoResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/user'
        tags:
          $ref: '#/components/schemas/tags'
    listUsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/user'
    actionWithUserRequest:
      type: object
      properties:
        space_id:
          type: integer
          example: 1234
    fillBlankRequest:
      type: object
      properties:
        space_id:
          type: integer
          example: 1234
        user_tags:
          $ref: '#/components/schemas/tags'
        pair_tags:
          $ref: '#/components/schemas/tags'
    user:
      type: object
      properties:
        user_id:
          type: integer
          example: 1234
        first_name:
          type: string
          example: ivan
        last_name:
          type: string
          example: pupkin
        username:
          type: string
          example: ivan_pupk123
        photo_url:
          type: string
          example: http://my_photo
        auth_date:
          type: string
          format: date-time
          example: 11.01.2002 12:00
    event:
      type: object
      properties:
        name:
          type: string
          example: fun event
        description:
          type: string
          example: enormously fun event
        begin_date:
          type: string
          format: date-time
          example: 11.01.2002 12:00
        end_date:
          type: string
          format: date-time
          example: 11.01.2002 12:00
        tags:
          $ref: '#/components/schemas/tags'
    space:
      type: object
      properties:
        space_id:
          type: integer
          example: 1234
        space_name:
          type: string
          example: test
        space_description:
          type: string
          example: space for test
        tags:
          $ref: '#/components/schemas/spaceTags'
    spaceTags:
      type: array
      items:
        type: object
        additionalProperties:
          type: array
          items:
            type: string
          example:
            - '1'
            - '2'
            - '3'
        example:
          course:
            - math
            - cs
            - philosophy
    tags:
      type: array
      items:
        type: object
        additionalProperties:
          type: string
        example:
          course: math

