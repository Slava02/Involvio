---
swagger: "2.0"
info:
  description: "Endpoints for pet-project involvio"
  version: "1.0.7"
  title: "Involvio"
tags:
  - name: "spaces"
  - name: "events"
  - name: "users"

schemes:
  - "https"
  - "http"
paths:
  /spaces:
    post:
      tags:
        - "spaces"
      summary: "create a space"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/createSpacesRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/createSpacesResponse"
    get:
      tags:
        - "spaces"
      summary: "get list of availible spaces"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/listSpacesResponse"
  /spaces/{spaceId}:
    get:
      tags:
        - "spaces"
      summary: "space info"
      produces:
        - "application/json"
      parameters:
        - name: "spaceId"
          in: "path"
          required: true
          type: integer
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/spaceInfoResponse"

  /spaces/{spaceId}/join:
    post:
      tags:
        - "spaces"
      summary: "join space"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "spaceId"
          in: "path"
          required: true
          type: integer
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/joinSpacesRequest"
      responses:
        200:
          description: "successful operation"

  /events:
    post:
      tags:
        - "events"
      summary: "Create event"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/createEventRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/createEventResponse"
  /events/{eventId}:
    get:
      tags:
        - "events"
      summary: "event info"
      produces:
        - "application/json"
      parameters:
        - name: "eventId"
          in: "path"
          required: true
          type: integer
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/eventInfoResponse"

  /events/{eventId}/join:
    post:
      tags:
        - "events"
      summary: "join event "
      consumes:
        - "application/json"
      parameters:
        - name: "eventId"
          in: "path"
          required: true
          type: integer
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/joinEventRequest"
      responses:
        200:
          description: "successful operation"



  /users/{usersId}:
    get:
      tags:
        - "users"
      summary: "show profile"
      produces:
        - "application/json"
      parameters:
        - name: "usersId"
          in: "path"
          required: true
          type: integer
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/userInfoResponse"

    delete:
      tags:
        - "users"
      summary: "delete user"
      parameters:
        - name: "usersId"
          in: "path"
          required: true
          type: integer
      responses:
        200:
          description: "successful operation"

    post:
      tags:
        - "users"
      summary: "fill the blank (or edit) Info about youself and your interests"
      consumes:
        - "application/json"
      parameters:
        - name: "usersId"
          in: "path"
          required: true
          type: integer
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/fillBlankRequest"
      responses:
        200:
          description: "successful operation"

  /users/{usersId}/promote:
    post:
      tags:
        - "users"
      summary: "make admin"
      consumes:
        - "application/json"
      parameters:
        - name: "usersId"
          in: "path"
          required: true
          type: integer
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/actionWithUserRequest"
      responses:
        200:
          description: "successful operation"

  /users/{usersId}/reduce:
    post:
      tags:
        - "users"
      summary: "cut priveleges (creator only)"
      consumes:
        - "application/json"
      parameters:
        - name: "usersId"
          in: "path"
          required: true
          type: integer
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/actionWithUserRequest"
      responses:
        200:
          description: "successful operation"

definitions:
  createSpacesRequest:
    type: object
    properties:
      admin_id:
        type: integer
        example: 1234
      tags:
        $ref: "#/definitions/tags"

  createSpacesResponse:
    type: object
    properties:
      space_id:
        type: integer
        example: 1234

  listSpacesResponse:
    type: object
    properties:
      spaces:
        type: array
        items:
          $ref: "#/definitions/space"


  spaceInfoResponse:
    type: object
    properties:
      space:
        $ref: "#/definitions/space"


  joinSpacesRequest:
    $ref: "#/definitions/user"


  createEventRequest:
    type: object
    properties:
      user_id:
        type: integer
        example: 1234
      space_id:
        type: integer
        example: 1234
      event:
        $ref: "#/definitions/event"

  createEventResponse:
    type: object
    properties:
      event_id:
        type: integer
        example: 1234

  joinEventRequest:
    type: object
    properties:
      user_id:
        type: integer
        example: 1234


  eventInfoResponse:
    type: object
    properties:
      event:
        $ref: "#/definitions/event"
      users:
        type: array
        items:
          $ref: "#/definitions/user"

  userInfoResponse:
    type: object
    properties:
      user:
        $ref: "#/definitions/user"

  listUsersResponse:
    type: object
    properties:
      users:
        type: array
        items:
          $ref: "#/definitions/user"

  actionWithUserRequest:
    type: object
    properties:
      space_id:
        type: integer
        example: 1234

  fillBlankRequest:
    type: object
    properties:
      space_id:
        type: integer
        example: 1234
      user_tags:
        $ref: "#/definitions/tags"
      psir_tags:
        $ref: "#/definitions/tags"

  user:
    type: object
    properties:
      user_id:
        type: integer
        example: 1234
      first_name:
        type: string
        example: "ivan"
      last_name:
        type: string
        example: "pupkin"
      username:
        type: string
        example: "ivan_pupk123"
      photo_url:
        type: string
        example: "http://my_photo"
      auth_date:
        type: string
        format: date-time
        example: "11.01.2002 12:00"

  event:
    type: object
    properties:
      name:
        type: string
        example: "fun event"
      description:
        type: string
        example: "enormously fun event"
      begin_date:
        type: string
        format: date-time
        example: "11.01.2002 12:00"
      end_date:
        type: string
        format: date-time
        example: "11.01.2002 12:00"
      tags:
        $ref: "#/definitions/tags"

  space:
    type: object
    properties:
      space_id:
        type: integer
        example: 1234
      space_name:
        type: string
        example: "test"
      space_description:
        type: string
        example: "space for test"
      tags:
        $ref: "#/definitions/tags"

  tags:
    type: array
    items:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
        example:
          - "1"
          - "2"
          - "3"
      example:
        course: ["math", "cs", "philosophy"]
